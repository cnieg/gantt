name: Java CI with Maven

on:
  push:
  pull_request:
    branches: [ master ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4
      
      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          
      - name: Build with Maven
        run: mvn -B package --file pom.xml

      - name: Get version
        id: get_version
        run: echo ::set-output name=VERSION::$(mvn -q -Dexec.executable="echo" -Dexec.args='${project.version}' --non-recursive org.codehaus.mojo:exec-maven-plugin:1.6.0:exec)

      - name: Build & Push docker image
        id: build_docker
        uses: docker/build-push-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
          repository: ${{github.repository}}
          push: true
          tag_with_ref: true
          add_git_labels: true

      - name: Verify version
        id: verify_version
        if: github.ref == 'refs/heads/master'
        run: |
          if [[ "${{ steps.get_version.outputs.VERSION }}" == *"-SNAPSHOT"* ]]; then
            echo "Snapshot version are forbidden on master branch"
            exit 1
          fi

      - name: Create Release
        id: create_release
        if: github.ref == 'refs/heads/master'
        uses: actions/create-release@latest
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.get_version.outputs.VERSION }}
          release_name: Release ${{ steps.get_version.outputs.VERSION }}
          body: |
            Release ${{ steps.get_version.outputs.VERSION }}
          draft: false
          prerelease: false

      - name: Push docker image release
        id: push_docker_release
        if: github.ref == 'refs/heads/master'
        uses: docker/build-push-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
          repository: ${{github.repository}}
          push: true
          tags: ${{ steps.get_version.outputs.VERSION }}
          add_git_labels: true
